name: 3. Production deployment

env:
  PREFIX_K8S_NAMESPACE: demo-${{ github.event.repository.name }}
  PREFIX_IAC_FILENAME: ${{ github.event.repository.name }}
  ARGOCD_PROJECT: demo
  HELM_VALUES_PATH: iac/helm-values
  IMAGE_REGISTRY: ghcr.io
  IMAGE_REPO: ${{ github.repository }}
  IMAGE_NAME: ghcr.io/${{ github.repository }}

on:
  workflow_dispatch:
    inputs:
      use-latest:
        type: boolean
        required: true
        default: false
        description: Automatically pick the latest tag version
      version:
        type: string
        required: false
        description: 'Put version to deploy to production'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get latest tag version
        if: ${{ inputs.use-latest }}
        id: semver
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          DEFAULT_BUMP: none
      - name: Set tag version
        run: echo "DEPLOY_VERSION=${{ inputs.use-latest && steps.semver.outputs.tag || inputs.version }}" >> "$GITHUB_ENV"
      - name: Generate job summary version to deploy
        run: |
          echo "This GitHub Actions is going to deploy ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }} to version ${{ env.DEPLOY_VERSION }}" >> $GITHUB_STEP_SUMMARY
    outputs:
      image_tag: ${{ env.DEPLOY_VERSION }}
      image_repo: ${{ env.IMAGE_REPO }}
      image_registry: ${{ env.IMAGE_REGISTRY }}
      helm_values_file: "${{ env.HELM_VALUES_PATH }}/${{ env.PREFIX_IAC_FILENAME }}-prd.yaml"
      argocd_project: ${{ env.ARGOCD_PROJECT }}
      argocd_app_name: ${{ env.PREFIX_K8S_NAMESPACE }}-${{ env.DEPLOY_ENV }}/${{ env.PREFIX_IAC_FILENAME }}-${{ env.DEPLOY_ENV }}

  gitops-argocd:
    uses: opsta/.github/.github/workflows/gitops-argocd.yaml@main
    needs:
      - setup
    with:
      helm_values_file: ${{ needs.setup.outputs.helm_values_file }}
      helm_image_tag_value: ${{ needs.setup.outputs.image_tag }}
      argocd_project: ${{ needs.setup.outputs.argocd_project }}
      argocd_app_name: ${{ needs.setup.outputs.argocd_app_name }}
      image_registry: ${{ needs.setup.outputs.image_registry }}
      image_repo: ${{ needs.setup.outputs.image_repo }}
      image_tag: ${{ needs.setup.outputs.image_tag }}
    secrets:
      argocd_server: ${{ secrets.ARGOCD_SERVER }}
      argocd_auth_token: ${{ secrets.ARGOCD_AUTH_TOKEN }}
