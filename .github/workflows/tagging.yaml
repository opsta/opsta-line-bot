name: 2. Production tagging

env:
  IMAGE_NAME: ghcr.io/opsta/opsta-linebot

on:
  workflow_dispatch:
    inputs:
      bump:
        description: Choose how you are going to bump version
        required: true
        type: choice
        default: patch
        options:
          - patch
          - minor
          - major
      skip-security-gate:
        type: boolean
        default: false
        description: Skip security gate check

jobs:
  defectdojo-security-gate:
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip-security-gate }}
    steps:
      - name: DefectDojo Security Gate Thresholds
        uses: portswigger-cloud/defectdojo-findings-thresholds@v1
        with:
          defectdojo-url: ${{ secrets.DEFECTDOJO_HOST }}
          defectdojo-username: ${{ secrets.DEFECTDOJO_USERNAME }}
          defectdojo-password: ${{ secrets.DEFECTDOJO_PASSWORD }}
          defectdojo-product: ${{ github.event.repository.name }}
          # Need to put every thresholds to make it working
          total-threshold: 1000000
          critical-threshold: 0
          high-threshold: 0
          medium-threshold: 1000000
          low-threshold: 1000000
          info-threshold: 1000000

  tag-prd:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && !failure() }}
    needs:
      - defectdojo-security-gate
    steps:
      - name: Get next semver version
        id: semver
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          DEFAULT_BUMP: ${{ inputs.bump }}
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Crane
        uses: imjasonh/setup-crane@v0.4
      - name: Copy Docker Image from dev to production
        run: crane copy ${{ env.IMAGE_NAME }}:edge ${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.new_tag }}
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ steps.semver.outputs.new_tag }}" \
            --repo="${{ github.repository }}" \
            --title="${{ steps.semver.outputs.new_tag }}" \
            --generate-notes
