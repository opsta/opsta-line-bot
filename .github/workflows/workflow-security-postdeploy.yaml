name: Reusable security post-deploy workflow

on:
  workflow_call:
    inputs:
      github_repo_name:
        required: true
        type: string
        description: GitHub Repository Name
      zap_target:
        required: true
        type: string
        description: ZAP target URL
      deploy_env:
        required: true
        type: string
        description: Environment such as dev, uat, prd
      sonarqube_report_filename:
        required: false
        type: string
        default: sonar-report.html
        description: SonarQube report file name
      trivy_sca_report_filename:
        required: false
        type: string
        default: trivy-sca-report.json
        description: Trivy SCA report file name
      trivy_iac_report_filename:
        required: false
        type: string
        default: trivy-iac-report.json
        description: Trivy IaC report file name
      trivy_image_report_filename:
        required: false
        type: string
        default: trivy-image-report.json
        description: Trivy Image report file name
      zap_baseline_report_filename:
        required: false
        type: string
        default: zap-baseline-report.xml
        description: ZAP baseline report file name
      zap_api_report_filename:
        required: false
        type: string
        default: zap-api-report.xml
        description: ZAP API report file name
      zap_full_report_filename:
        required: false
        type: string
        default: zap-full-report.xml
        description: ZAP full report file name
      report_retention_days:
        required: false
        type: number
        default: 1
        description: Report files retention days
      defectdojo_threshold_total:
        required: false
        type: number
        default: 1000000
        description: DefectDojo total findinds threshold
      defectdojo_threshold_critical:
        required: false
        type: number
        default: 0
        description: DefectDojo critical findinds threshold
      defectdojo_threshold_high:
        required: false
        type: number
        default: 0
        description: DefectDojo high findinds threshold
      defectdojo_threshold_medium:
        required: false
        type: number
        default: 1000000
        description: DefectDojo medium findinds threshold
      defectdojo_threshold_low:
        required: false
        type: number
        default: 1000000
        description: DefectDojo low findinds threshold
      defectdojo_threshold_info:
        required: false
        type: number
        default: 1000000
        description: DefectDojo info findinds threshold
      defectdojo_engagement_name:
        required: true
        type: string
        description: DefectDojo engagement name
      defectdojo_product_name:
        required: true
        type: string
        description: DefectDojo product name
    secrets:
      defectdojo_host:
        required: true
        description: DefectDojo URL (MUST PUT SLASH AT THE END) eg. https://demo.defectdojo.org/
      defectdojo_username:
        required: true
        description: DefectDojo Username
      defectdojo_password:
        required: true
        description: DefectDojo Password

jobs:
  zap-baseline:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && !failure() }}
    steps:
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.13.0
        with:
          target: ${{ inputs.zap_target }}
          allow_issue_writing: false
          artifact_name: zap-baseline-scan
          cmd_options: "-I -x ${{ inputs.zap_baseline_report_filename }}"
          fail_action: true
      - name: Upload ZAP Baseline Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: ${{ inputs.zap_baseline_report_filename }}
          retention-days: ${{ inputs.report_retention_days }}

  zap-api:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && !failure() }}
    steps:
      - name: ZAP API Scan
        uses: zaproxy/action-api-scan@v0.8.0
        with:
          target: ${{ inputs.zap_target }}
          allow_issue_writing: false
          artifact_name: zap-api-scan
          cmd_options: "-I -x ${{ inputs.zap_api_report_filename }}"
          fail_action: true
      - name: Upload ZAP API Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-api-report
          path: ${{ inputs.zap_api_report_filename }}
          retention-days: ${{ inputs.report_retention_days }}

  zap-full:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && !failure() }}
    steps:
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: ${{ inputs.zap_target }}
          allow_issue_writing: false
          artifact_name: zap-full-scan
          cmd_options: "-I -x ${{ inputs.zap_full_report_filename }}"
          fail_action: true
      - name: Upload ZAP Full Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-full-report
          path: ${{ inputs.zap_full_report_filename }}
          retention-days: ${{ inputs.report_retention_days }}

  defectdojo-import:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - zap-baseline
      - zap-api
      - zap-full
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Import Security Test Report into DefectDojo
        uses: portswigger-cloud/defectdojo-import-scan@v1
        with:
          defectdojo-url: ${{ secrets.DEFECTDOJO_HOST }}
          defectdojo-username: ${{ secrets.DEFECTDOJO_USERNAME }}
          defectdojo-password: ${{ secrets.DEFECTDOJO_PASSWORD }}
          defectdojo-product-type: Research and Development
          defectdojo-product: ${{ github.event.repository.name }}
          defectdojo-environment-type: ${{ needs.setup.outputs.deploy_env }}
          defectdojo-scan-type: ${{ matrix.defectdojo_scan_type }}
          defectdojo-engagement-name: ${{ needs.setup.outputs.deploy_env }}-${{ github.run_id }}
          scan-results-file-name: ${{ matrix.defectdojo_report_file }}
    strategy:
      matrix:
        include:
          - defectdojo_report_file: ${{ inputs.sonarqube_report_filename }}
            defectdojo_scan_type: SonarQube Scan
          - defectdojo_report_file: ${{ inputs.trivy_sca_report_filename }}
            defectdojo_scan_type: Trivy Scan
          - defectdojo_report_file: ${{ inputs.trivy_iac_report_filename }}
            defectdojo_scan_type: Trivy Scan
          - defectdojo_report_file: ${{ inputs.trivy_image_report_filename }}
            defectdojo_scan_type: Trivy Scan
          - defectdojo_report_file: ${{ inputs.zap_baseline_report_filename }}
            defectdojo_scan_type: ZAP Scan
          - defectdojo_report_file: ${{ inputs.zap_api_report_filename }}
            defectdojo_scan_type: ZAP Scan
          - defectdojo_report_file: ${{ inputs.zap_full_report_filename }}
            defectdojo_scan_type: ZAP Scan

  defectdojo-findings:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - defectdojo-import
    steps:
      - name: DefectDojo Query Findings
        uses: portswigger-cloud/defectdojo-active-findings@v1
        with:
          defectdojo-url: ${{ secrets.defectdojo_host }}
          defectdojo-username: ${{ secrets.defectdojo_username }}
          defectdojo-password: ${{ secrets.defectdojo_password }}
          defectdojo-product: ${{ inputs.defectdojo_product_name }}

  defectdojo-security-gate:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - defectdojo-import
    steps:
      - name: DefectDojo Security Gate Thresholds
        uses: portswigger-cloud/defectdojo-findings-thresholds@v1
        with:
          defectdojo-url: ${{ secrets.defectdojo_host }}
          defectdojo-username: ${{ secrets.defectdojo_username }}
          defectdojo-password: ${{ secrets.defectdojo_password }}
          defectdojo-product: ${{ inputs.defectdojo_product_name }}
          # Need to put every thresholds to make it working
          total-threshold: ${{ inputs.defectdojo_threshold_total }}
          critical-threshold: ${{ inputs.defectdojo_threshold_critical }}
          high-threshold: ${{ inputs.defectdojo_threshold_high }}
          medium-threshold: ${{ inputs.defectdojo_threshold_medium }}
          low-threshold: ${{ inputs.defectdojo_threshold_low }}
          info-threshold: ${{ inputs.defectdojo_threshold_info }}
